{"mappings":"0gpHAMO,IAAMA,EAAW,CAAC,EAAC,GAAI,GAAK,EAAC,EAAI,GAAI,CAAC,GAAG,IAEnCC,EAAQD,EAASE,OAYjBC,EAAYH,EAASI,aCpBlCC,EAAe,0HCcf,IAsBIC,EAtBEC,EAAOC,EAAAC,EAAA,GAEPC,EAAqBH,EAAK,CAC5BI,KAAMJ,EAAKK,KAAK,QAChBC,KAAMN,EAAKK,KAAK,QAChBE,WAAY,CAAEC,SAAUZ,GACxBa,SAAU,CAENC,MAAOV,EAAKW,QAAQ,iBACpBC,OAAQZ,EAAKW,QAAQ,mBAEzBE,MAAAnB,IAGEoB,EAAQ,CAAEC,MAAO,CAAC,EAAG,EAAG,EAAG,GAAIC,MAAO,EAAGC,QAAS,GAElDC,EAAU,CACZ,CAAEC,KAAM,SAAUf,KAAMH,EC/Bb,gQD+BsBK,KAAML,EAAAH,IACvC,CAAEqB,KAAM,aAAcf,KAAMH,EEhCjB,kRFgCyBK,KAAML,EAAAH,IAC1C,CAAEqB,KAAM,QAASf,KAAAH,EGjCN,wIHiCYK,KAAAL,EIjCZ,0MJsCNmB,EAAMC,OAAQC,EAARD,EAAEE,KACbvB,EAAKwB,OACLxB,EAAKyB,MAAMX,GAGX,IAAMY,EAAIJ,EAAEJ,EAAQvB,OAEpBI,EAASmB,EAAQQ,GACjBC,QAAQC,IAAK,UAAgBC,OAAPH,EAAE,OAAiBG,OAAZ9B,EAAOoB,KAAK,KAAIpB,GAC7CI,EAAmBJ,GAGvB,IAAM+B,EAAO,WAAM,OAAA9B,EAAK+B,KAAKX,IAE7BY,SAASC,iBAAiB,QAASH,GACnCA","sources":["dist/esm/index.js","uv.frag.glsl","demo/index.js","uv-ndc.vert.glsl","uv-texture.vert.glsl","index.vert.glsl","index.frag.glsl"],"sourcesContent":["/**\n * The 3 vertices of a 2D triangle covering the viewport in NDC coordinates ([-1, 1]).\n *\n * @export\n * @type {array.<array.<number>>}\n */\nexport const vertices = [[-1, -1], [-1, 4], [4, -1]];\n\nexport const count = vertices.length;\nexport const dim = 2;\n\n/**\n * The flat array of the above triangle, to be bound as a WebGL attribute buffer for\n * rendering the triangle in the vertex shader.\n * These positions will result in clipped NDC coordinates ([-1, 1]) over the\n * viewport's width and height.\n *\n * @export\n * @type {array.<number>}\n */\nexport const positions = vertices.flat();\n\nexport default positions;\n","precision highp float;\n\nvarying vec2 uv;\n\nvoid main() {\n    gl_FragColor = vec4(uv, 0, 1);\n}\n","// Any rendering library, but made with `regl` in mind.\nimport getRegl from 'regl';\n\n// The position attributes.\nimport { positions, count } from '../';\n\n// The various shader examples.\nimport vert from '../index.vert.glsl';\nimport vertNDC from '../uv-ndc.vert.glsl';\nimport vertST from '../uv-texture.vert.glsl';\n\nimport frag from '../index.frag.glsl';\nimport fragUV from '../uv.frag.glsl';\n\nconst regl = getRegl();\n\nconst drawScreenTriangle = regl({\n    vert: regl.prop('vert'),\n    frag: regl.prop('frag'),\n    attributes: { position: positions },\n    uniforms: {\n        // These are only used for the `index.frag.glsl` shader.\n        width: regl.context('viewportWidth'),\n        height: regl.context('viewportHeight')\n    },\n    count\n});\n\nconst clear = { color: [0, 0, 0, 1], depth: 1, stencil: 0 };\n\nconst shaders = [\n    { name: 'uv-ndc', vert: vertNDC, frag: fragUV },\n    { name: 'uv-texture', vert: vertST, frag: fragUV },\n    { name: 'index', vert, frag }\n];\n\nlet shader;\n\nfunction frame({ tick: t }) {\n    regl.poll();\n    regl.clear(clear);\n\n    // Switch shader every frame.\n    const s = t%shaders.length;\n\n    shader = shaders[s];\n    console.log(`Shader ${s}: '${shader.name}'`, shader);\n    drawScreenTriangle(shader);\n}\n\nconst draw = () => regl.draw(frame);\n\ndocument.addEventListener('click', draw);\ndraw();\n","precision highp float;\n\nattribute vec2 position;\n\nvarying vec2 uv;\n\n// Flips the y-axis to point downwards.\nconst vec2 flip = vec2(1, -1);\n\nvoid main() {\n    uv = position*flip;\n    gl_Position = vec4(position, 0, 1);\n}\n","precision highp float;\n\nattribute vec2 position;\n\nvarying vec2 uv;\n\n// Translation for UV NDC to texture coordinates.\nconst vec2 offset = vec2(0.5);\n\nvoid main() {\n    uv = (position*0.5)+offset;\n    gl_Position = vec4(position, 0, 1);\n}\n","precision highp float;\n\nattribute vec2 position;\n\nvoid main() {\n    gl_Position = vec4(position, 0, 1);\n}\n","precision highp float;\n\nuniform float width;\nuniform float height;\n\nvoid main() {\n    gl_FragColor = vec4(0, gl_FragCoord.x/width, gl_FragCoord.y/height, 1);\n}\n"],"names":["$f4a062498ccd5ef3$export$ba60520149d1328e","$f4a062498ccd5ef3$export$85b9a36db797e02b","length","$f4a062498ccd5ef3$export$878041e1e4cd4218","flat","$9cd05862b98fc904$exports","$e5e27940694a4f4d$var$shader","$e5e27940694a4f4d$var$regl","$parcel$interopDefault","$2a263769c476450e$exports","$e5e27940694a4f4d$var$drawScreenTriangle","vert","prop","frag","attributes","position","uniforms","width","context","height","count","$e5e27940694a4f4d$var$clear","color","depth","stencil","$e5e27940694a4f4d$var$shaders","name","$e5e27940694a4f4d$var$frame","param","t","tick","poll","clear","s","console","log","concat","$e5e27940694a4f4d$var$draw","draw","document","addEventListener"],"version":3,"file":"index.636660c1.js.map"}