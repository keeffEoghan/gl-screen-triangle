{"version":3,"sources":["../index.js","../index.vert.glsl","../texture.vert.glsl","../index.frag.glsl","index.js"],"names":["positions","module","exports","regl","verts","stVert","uvVert","drawScreenTriangle","vert","t","tick","length","frag","attributes","position","count","clear","color","depth","stencil","frame","poll","document","addEventListener"],"mappings":";;;;;AAQeA,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,QAAAA,QAAAA,eAAAA,EANR,IAAMA,EAAY,EACpB,GAAI,GACJ,EAAG,EACJ,GAAI,GAGOA,QAAAA,UAAAA,EAAAA,IAAAA,EAAAA,EAAAA,QAAAA,QAAAA;;ACRfC,OAAOC,QAAQ;;ACAfD,OAAOC,QAAQ;;ACAfD,OAAOC,QAAQ;;ACiCV,aAhCL,IAAA,EAAA,EAAA,QAAA,SAEA,EAAA,EAAA,QAAA,QAEA,EAAA,EAAA,QAAA,uBACA,EAAA,EAAA,QAAA,yBAEA,EAAA,EAAA,QAAA,uBAyBK,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAvBL,IAAMC,GAAO,EAAb,EAAA,WACMC,EAAQ,CAACC,EAAD,QAASC,EAAT,SAERC,EAAqBJ,EAAK,CAC5BK,KAAM,SAAA,GAASC,IAAAA,EAANC,EAAAA,KAAcN,OAAAA,EAAMK,EAAEL,EAAMO,SACrCC,KAAAA,EAF4B,QAG5BC,WAAY,CAAEC,SAAUd,EAAAA,SACxBe,MAAOf,EAAUW,QAAAA,OAAO,IAGtBK,EAAQ,CACVC,MAAO,CAAC,EAAG,EAAG,EAAG,GACjBC,MAAO,EACPC,QAAS,GAGb,SAASC,IACLjB,EAAKkB,OACLlB,EAAKa,MAAMA,GACXT,IAGJe,SAASC,iBAAiB,QAASH,GACnCA","file":"example.f639a071.js","sourceRoot":"../example","sourcesContent":["// These positions will result in clipped NDC coordinates in the range [-1, 1] over the\n// viewport's width and height.\nexport const positions = [\n    -1, -1,\n    -1, 4,\n    4, -1\n];\n\nexport default positions;\n","module.exports=\"precision highp float;\\n#define GLSLIFY 1\\n\\nattribute vec2 position;\\n\\nvarying vec2 uv;\\n\\n// Flips the y-axis to point downwards.\\nconst vec2 flip = vec2(1, -1);\\n\\nvoid main() {\\n    uv = position*flip;\\n    gl_Position = vec4(position, 0, 1);\\n}\\n\";","module.exports=\"precision highp float;\\n#define GLSLIFY 1\\n\\nattribute vec2 position;\\n\\nvarying vec2 uv;\\n\\n// Translation for NDC-UV to texture ST coordinates.\\nconst vec2 offset = vec2(0.5);\\n\\nvoid main() {\\n    uv = (position*0.5)+offset;\\n    gl_Position = vec4(position, 0, 1);\\n}\\n\";","module.exports=\"precision highp float;\\n#define GLSLIFY 1\\n\\nvarying vec2 uv;\\n\\nvoid main() {\\n    gl_FragColor = vec4(uv, 0, 1);\\n}\\n\";","// Any rendering library, but made with `regl` in mind.\nimport getRegl from 'regl';\n\nimport positions from '../';\n\nimport uvVert from '../index.vert.glsl';\nimport stVert from '../texture.vert.glsl';\n\nimport frag from '../index.frag.glsl';\n\nconst regl = getRegl();\nconst verts = [stVert, uvVert];\n\nconst drawScreenTriangle = regl({\n    vert: ({ tick: t }) => verts[t%verts.length],\n    frag,\n    attributes: { position: positions },\n    count: positions.length/2\n});\n\nconst clear = {\n    color: [0, 0, 0, 1],\n    depth: 1,\n    stencil: 0\n};\n\nfunction frame() {\n    regl.poll();\n    regl.clear(clear)\n    drawScreenTriangle();\n}\n\ndocument.addEventListener('click', frame);\nframe();\n"]}